unit Utils.BrasilAPI;

interface

uses
  System.SysUtils, System.Classes, System.JSON, IdHTTP, IdSSLOpenSSL;

type
  TBrasilAPI = class
  private
    FIdHTTP: TIdHTTP;
    function FazerRequisicaoGET(const URL: string): TJSONObject;

    function ConsultarCEP(const CEP: string): TJSONObject;
    function ConsultarCNPJ(const CNPJ: string): TJSONObject;
    function ConsultarCodigoIBGE(const CodigoIBGE: string): TJSONObject;
    function ConsultarLatLongCEP(const CEP: string): TJSONObject;
  public
    constructor Create;
    destructor Destroy; override;

    function FConsultarCEP(const CEP: string): String;
  end;

implementation

constructor TBrasilAPI.Create;
begin
  FIdHTTP := TIdHTTP.Create(nil);
  FIdHTTP.IOHandler := TIdSSLIOHandlerSocketOpenSSL.Create(FIdHTTP);
  FIdHTTP.Request.ContentType := 'application/json';
  FIdHTTP.Request.UserAgent := 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36 OPR/77.0.4054.203';
end;

destructor TBrasilAPI.Destroy;
begin
  FIdHTTP.Free;
  inherited;
end;

function TBrasilAPI.FazerRequisicaoGET(const URL: string): TJSONObject;
var
  Response: string;
begin
  try
    Response := FIdHTTP.Get(URL);
    Result := TJSONObject.ParseJSONValue(Response) as TJSONObject;
  except
    on E: Exception do
    begin
      raise Exception.Create('Erro na requisição: ' + E.Message);
    end;
  end;
end;

function TBrasilAPI.ConsultarCEP(const CEP: string): TJSONObject;
begin
  Result := FazerRequisicaoGET('https://brasilapi.com.br/api/cep/v1/' + CEP);
end;

function TBrasilAPI.ConsultarCNPJ(const CNPJ: string): TJSONObject;
begin
  Result := FazerRequisicaoGET('https://brasilapi.com.br/api/cnpj/v1/' + CNPJ);
end;

function TBrasilAPI.ConsultarCodigoIBGE(const CodigoIBGE: string): TJSONObject;
begin
  Result := FazerRequisicaoGET('https://brasilapi.com.br/api/ibge/municipios/v1/' + CodigoIBGE);
end;

function TBrasilAPI.ConsultarLatLongCEP(const CEP: string): TJSONObject;
begin
  Result := FazerRequisicaoGET('https://brasilapi.com.br/api/cep/v2/' + CEP);
end;

function TBrasilAPI.FConsultarCEP(const CEP: string) : String;
var
  JSON: TJSONObject;
begin
  try
    JSON := ConsultarCEP(CEP);
    Result := JSON.Format(2);
  except
    on E: Exception do
    Begin
      Result := 'Erro: ' + E.Message;
      raise Exception.Create(Result);
    End;
  end;
end;


end.
